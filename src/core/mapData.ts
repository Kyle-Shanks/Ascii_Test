import { ENTITY_TYPES, EntityType } from 'src/core/constants'
import { Stats, Vector2 } from 'src/core/types'

const MAP_NUM = {
    WALL: 0,
    DOOR: 1,
    KEY: 2,
    PORTAL: 3,
    GOLD: 4
} as const

export type MapNum = typeof MAP_NUM[keyof typeof MAP_NUM]

// Map of map data numbers to entity types
export const MapNumMap: Record<MapNum, EntityType> = {
    [MAP_NUM.WALL]: ENTITY_TYPES.WALL,
    [MAP_NUM.DOOR]: ENTITY_TYPES.DOOR,
    [MAP_NUM.KEY]: ENTITY_TYPES.KEY,
    [MAP_NUM.GOLD]: ENTITY_TYPES.GOLD,
    [MAP_NUM.PORTAL]: ENTITY_TYPES.PORTAL,
} as const

export type MapData = (MapNum | null)[][]

type EnemyProps = {
    position: Vector2
    stats: Stats
}

export type MapInfo = {
    data: MapData
    enemies: EnemyProps[]
    startPosition: Vector2
    title: string
}

// To make the map data visually easier to read
const _ = null

const mapData: MapInfo[] = [
    {
        title: 'Test Level',
        startPosition: new Vector2(3, 3),
        enemies: [
            {
                position: new Vector2(8,6),
                stats: {
                    HP: 1,
                    ACC: 50,
                    STR: 1,
                    DEF: 0,
                    SPD: 1,
                },
            }
        ],
        data: [
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,2,_,0],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,0,_,_,0,_,_,0,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,0,_,_,0,_,_,0,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,0,_,_,0,_,_,0,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,0,_,_,0,_,_,0,_,_,0,0,1,0,0],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,0],
            [0,_,_,_,_,_,_,_,4,_,4,_,4,_,_,_,0,_,3,_,0],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        ],
    },
    {
        title: 'Test Level 2',
        startPosition: new Vector2(3, 3),
        enemies: [],
        data: [
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,2,_,0],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,0,0,0,1,1,0,0,0,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,0,_,4,4,4,4,_,0,_,_,_,3,_,0],
            [0,_,_,_,_,_,_,0,_,4,4,4,4,_,0,_,_,_,_,_,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        ],
    },
    {
        title: 'Bigger Test Level',
        startPosition: new Vector2(2, 10),
        enemies: [],
        data: [
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,_,_,_,_,_,_,0,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,0,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,0,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,0,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,0,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,0,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,_,_,0],
            [0,0,0,0,0,_,_,0,0,0,0,0,_,_,0,_,_,_,_,_,0,0,0,0,0,0,_,_,_,_,_,0,0,0,0,0,0,0,0],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,0],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,_,_,_,_,0,0,0,0,0,0,0,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,_,_,0],
            [0,_,_,_,0,_,3,_,0,_,_,_,_,0,0,_,_,_,_,_,_,_,_,_,_,_,_,_,2,_,_,0,_,_,_,_,_,_,0],
            [0,_,_,_,0,_,_,_,0,_,_,_,_,0,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,_,_,0],
            [0,_,_,_,0,0,0,0,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,0,0,0,0,0,0,0,0,0,0,0,0,0,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0],
            [0,0,0,0,0,_,_,_,0,_,_,_,_,_,_,0,0,0,0,0,0,0,_,_,_,0,0,0,0,0,0,0,_,_,_,_,_,_,0],
            [0,_,_,_,0,_,_,_,0,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,_,_,0],
            [0,_,_,_,0,_,_,_,0,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,_,0,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,_,_,0],
            [0,_,_,_,_,_,_,_,0,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,_,_,0],
            [0,0,0,_,_,_,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_],
            [0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_],
            [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_],
        ],
    },
]

export default mapData
